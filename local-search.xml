<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>TVM在Ubuntu系统下的安装</title>
    <link href="/2022/07/28/TVM%E5%9C%A8Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <url>/2022/07/28/TVM%E5%9C%A8Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>安装过程主要参看<a href="https://tvm.apache.org/docs/install/from_source.html#developers-get-source-from-github">官方文档</a>，不过那个文档考虑的方面太多了，容易绕晕。这里考虑在conda环境下安装tvm。</p><h4 id="0-服务器环境"><a href="#0-服务器环境" class="headerlink" title="0.服务器环境"></a>0.服务器环境</h4><p>系统：Linux version 5.4.0-107-generic (buildd@lcy02-amd64-058) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1))<br>cpu：Intel(R) Xeon(R) CPU E5-2695 v4 @ 2.10GHz</p><h4 id="1-从GitHub获取源码"><a href="#1-从GitHub获取源码" class="headerlink" title="1.从GitHub获取源码"></a>1.从GitHub获取源码</h4><p><code>git clone --recursive https://github.com/apache/tvm tvm</code>。利用<code>--recursive</code>选项把子模块也进行克隆<br><img src="/2022/07/28/TVM%E5%9C%A8Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85/2022-07-28-17-09-05.png" alt="tvm"></p><h4 id="2-构建Conda环境"><a href="#2-构建Conda环境" class="headerlink" title="2.构建Conda环境"></a>2.构建Conda环境</h4><p>在<code>./tvm/conda/</code>文件夹下有一个<code>build-environment.yaml</code>文件，利用它可以直接构建出安装tvm需要的前置环境。<br><img src="/2022/07/28/TVM%E5%9C%A8Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85/2022-07-28-17-19-02.png" alt="build-environment.yaml"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Create a conda environment with the dependencies specified by the yaml</span><br>conda env create --file conda/build-environment.yaml<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Activate the created environment</span><br>conda activate tvm-build<br></code></pre></td></tr></table></figure><p>注意python版本,3.9.X以上版本的python是不被支持的。<br>接着就是在conda环境中安装tvm了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda build --output-folder=conda/pkg  conda/recipe<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Run conda/build_cuda.sh to build with cuda enabled</span><br>conda install tvm -c ./conda/pkg<br></code></pre></td></tr></table></figure><p>正常进行到这里的话，tvm-build环境中已经有tvm了，可以进行测试<br><img src="/2022/07/28/TVM%E5%9C%A8Ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85/2022-07-28-17-24-31.png" alt="result"></p><h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h4><p>利用conda环境来安装tvm还是相对容易的，毕竟conda的包管理确实好，而且tvm也支持直接利用conda来安装。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>重拾博客</title>
    <link href="/2022/07/14/%E9%87%8D%E6%8B%BE%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/07/14/%E9%87%8D%E6%8B%BE%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="0-记录下重新搭建博客的过程"><a href="#0-记录下重新搭建博客的过程" class="headerlink" title="0 记录下重新搭建博客的过程"></a>0 记录下重新搭建博客的过程</h2><p>之前在大二上《数据结构》的时候，接触了云服务器，觉得挺有意思的，后面自己在腾讯云用学生优惠整了台云服务器，现在已经到期了一段时间了。期间写了一点东西，不过大多都是没有什么技术含量的东西，以转载居多。本来觉得写博客好麻烦，再一开始的新鲜感过去之后，就不太提得起劲来写东西了。但是最近看到实验室的同学和师兄都有写博客记录的习惯，而且十分认真地对待这件事，尤其今天看了实验室毕业出去的<a href="https://jcf94.com/">颊神的博客</a>后，重新认识到了写博客这件事的意义，所以现在准备把这件事情重新捡起来。</p><h2 id="1-原先的博客情况"><a href="#1-原先的博客情况" class="headerlink" title="1 原先的博客情况"></a>1 原先的博客情况</h2><p>原来因为不想瞎折腾，所以博客系统选择了非常易于使用的<a href="https://halo.run/">Halo</a>, 它的操作真的很简单了，直接全图形化界面管理，不同整什么命令，有点傻瓜式，也比较适合我hhh。</p><h2 id="2-Hexo博客"><a href="#2-Hexo博客" class="headerlink" title="2 Hexo博客"></a>2 Hexo博客</h2><p>当时也看到了大名鼎鼎的<a href="https://hexo.io/zh-cn/">Hexo</a>博客，但是碍于当时觉得上手不如Halo那么简单，自己也对于命令行不是特别感冒<del>(其实就是菜，怕折腾)</del>，所以没有选择。现在看师兄和同学都用的Hexo，我就借鉴<del>（抄)</del>一下，也用这个博客系统了。</p><h3 id="2-1-搭建博客过程中遇到的问题"><a href="#2-1-搭建博客过程中遇到的问题" class="headerlink" title="2.1 搭建博客过程中遇到的问题"></a>2.1 搭建博客过程中遇到的问题</h3><p>在github建仓库啥的都没有什么问题，唯一出现问题的几个地方是在利用<code>hexo deploy</code>部署到github仓库的时候，访问超时，网上搜了发现是使用的代理的原因。使用命令<code>git config --global http.proxy 127.0.0.1:(vpn代理端口号）</code>将代理端口改为和翻墙软件一致就可以解决这个问题。<br>个人觉得利用github来搭建个人网站除了访问有点慢以外，还是挺不错的，毕竟也不收费，还要啥自行车。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/07/14/hello-world/"/>
    <url>/2022/07/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
